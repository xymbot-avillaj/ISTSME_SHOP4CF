# WARNING: Do not deploy this tutorial configuration directly to a production environment
#
# The tutorial docker-compose files have not been written for production deployment and will not
# scale. A proper architecture has been sacrificed to keep the narrative focused on the learning
# goals, they are just used to deploy everything onto a single Docker machine. All FIWARE components
# are running at full debug and extra ports have been exposed to allow for direct calls to services.
# They also contain various obvious security flaws - passwords in plain text, no load balancing,
# no use of HTTPS and so on.
#
# This is all to avoid the need of multiple machines, generating certificates, encrypting secrets
# and so on, purely so that a single docker-compose file can be read as an example to build on,
# not use directly.
#
# When deploying to a production environment, please refer to the Helm Repository
# for FIWARE Components in order to scale up to a proper architecture:
#
# see: https://github.com/FIWARE/helm-charts/
#
version: "3.5"
services:

  # Orion with NGSI-LD version, is responsible for processing the context.
  orion:
    image: fiware/orion-ld:0.7.0
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      default:
        aliases:
          - orion
    ports:
      - "1026:1026" # localhost:1026
    command: -corsOrigin __ALL -dbhost mongo-db -logLevel DEBUG -forwarding
    healthcheck:
      test: curl --fail -s http://orion:${ORION_LD_PORT}/version || exit 1
      interval: 5s

  mongo-db:
    image: mongo:4.4
    hostname: mongo-db
    container_name: db-mongo2
    expose:
      - "27017"
    ports:
      - "27017:27017" # localhost:27017
    networks:
      - default
    volumes:
      - mongo-db:/data
    healthcheck:
      test: |
        host=`hostname --i || echo '127.0.0.1'`;
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
      interval: 5s

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  mongo-db: ~
  grafana: ~
  pgadmin: ~
  timescale: ~